{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation Wiki on CVs and how to use them","text":"<p>Documentation in progress</p> <p>The contents of the pages are currently in development and will change. </p> <p>Tasks before a functioning CV library. </p> <ul> <li>complete link checking (there are still some typos)</li> <li>automated issue template parser - convert the issues into pull requests. (rewrite)</li> <li>example notebooks</li> <li>update web browser, pages, and cmipld recursive functions including known edge cases. </li> <li>CMIP6 style, CMOR compatible CV generation</li> <li>project template for use by others. </li> </ul> <p>CV task team tasks. </p> <ul> <li>determine the optimum naming of keys</li> <li>clearly define the standards. </li> <li>develop a set of pydantic checks. </li> </ul>"},{"location":"repository_status/","title":"JSON-LD Status","text":"<p>Documentation in progress</p> <p>All repositories listed below are incomplete and works of progress. The status badges merely identify whether or not the files have sucessfully published to pages, and if the qc script has failed. </p> Repository GitHub Pages URL Repository URL Status Badge wcrp-universe https://wcrp-cmip.github.io/WCRP-universe/ repo-link mip-variables https://wcrp-cmip.github.io/MIP-variables/ repo-link cmip6plus https://wcrp-cmip.github.io/CMIP6Plus_CVs/ repo-link cmip7 https://wcrp-cmip.github.io/CMIP7_CVs/ repo-link cf https://wcrp-cmip.github.io/CF/ repo-link obs4mips https://wolfiex.github.io/obs4MIPs-cmor-tables-ld/ repo-link"},{"location":"Explore_the_data/Network/","title":"Network","text":""},{"location":"Explore_the_data/Network/#mycelium-the-universe-network","title":"Mycelium: The Universe Network","text":"<p>Since the inherent reason for selecting JSON-LD is its linked data component, it makes sense that we might want to explore the links and networks created between the repositories. </p> <p>To do this we can convert the full LD network into an RDF graph, and extract relevant information. We can take the different types of files and visualise the links between them, as well as recreating a network of each individual item and edge-bundling them for clarity. </p> <p>This method of visualisation can serve as a useful diagnostic in identifying errors in our files, and ensuring that there are no broken links within the system. </p> <p>To view a full screen version of the circle packing click here</p>"},{"location":"Explore_the_data/The_different_types/","title":"The different types","text":""},{"location":"Explore_the_data/The_different_types/#circle-packing-the-repositories","title":"Circle Packing the repositories.","text":"<p>The following bubble diagram shows the categories present in each directory. To explore, either 'click' on the circles, or hover over a group (cluster). </p> <p>To view a full screen version of the circle packing click here</p>"},{"location":"Explore_the_data/treemap/","title":"Treemap","text":""},{"location":"Explore_the_data/treemap/#treemap","title":"Treemap","text":"<p>This is a file size comparison of the JSON-LD files in all the registered repositories. </p> <p>In viewing the data this way, we can build a better understanding on the number of files, and their hierarchy. This can be helpful in identifying repositories which require more maintainance, or may not want to be downloaded in their entirety by the end user. </p> <p>To view a full screen version of the treemap click here</p>"}]}